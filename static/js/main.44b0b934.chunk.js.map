{"version":3,"sources":["Sidebar.js","Main.js","App.js","index.js"],"names":["Sidebar","_ref","notes","onAddNote","onDeleteNote","activeNote","setActiveNote","sortedNotes","sort","a","b","lastModified","React","createElement","className","onClick","map","note","concat","id","title","body","substr","Date","toLocaleDateString","hour","minute","Main","onUpdateNote","onEditField","key","value","_objectSpread","[object Object]","now","type","onChange","e","target","autoFocus","placeholder","App","setNotes","useState","JSON","parse","localStorage","useEffect","setItem","stringify","newNote","uuid","idToDelete","filter","find","updatedNote","updatedNotesArray","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+KAwDeA,MArDf,SAAgBC,GAA8D,IAA7DC,MAACA,EAAKC,UAAEA,EAASC,aAAEA,EAAYC,WAAEA,EAAUC,cAAEA,GAAcL,EAExE,MAAMM,EAAcL,EAAMM,KAAK,CAACC,EAAEC,IAAMA,EAAEC,aAAeF,EAAEE,cAE3D,OAEIC,IAAAC,cAAA,OAAKC,UAAU,eAEXF,IAAAC,cAAA,OAAKC,UAAU,sBAEXF,IAAAC,cAAA,UAAI,gBAEJD,IAAAC,cAAA,UAAQE,QAASZ,GAAW,QAGhCS,IAAAC,cAAA,OAAKC,UAAU,qBAEdP,EAAYS,IAAKC,GAEdL,IAAAC,cAAA,OAAKC,UAAS,oBAAAI,OAAuBD,EAAKE,KAAOd,GAAc,SAAQ,KAAKU,QAASA,IAAMT,EAAcW,EAAKE,KAE1GP,IAAAC,cAAA,OAAKC,UAAU,sBAEXF,IAAAC,cAAA,cAASI,EAAKG,OAEdR,IAAAC,cAAA,UAAQE,QAASA,IAAMX,EAAaa,EAAKE,KAAK,WAIlDP,IAAAC,cAAA,SAAII,EAAKI,MAAQJ,EAAKI,KAAKC,OAAO,EAAG,KAAO,OAE5CV,IAAAC,cAAA,SAAOC,UAAU,aAAY,iBACV,IAEd,IAAIS,KAAKN,EAAKN,cAAca,mBAAmB,QAAS,CAErDC,KAAM,UACNC,OAAO,yBCsBpBC,MA3Df,SAAa1B,GAAgC,IAA9BI,WAAEA,EAAUuB,aAAEA,GAAc3B,EAEvC,MAAM4B,EAAcA,CAACC,EAAKC,KAEtBH,EAAYI,wBAAA,GAEL3B,GAAU,IAEd4B,CAACH,GAAMC,EAENpB,aAAcY,KAAKW,UAQ3B,OAAK7B,EAQLO,IAAAC,cAAA,OAAKC,UAAU,YAEXF,IAAAC,cAAA,OAAKC,UAAU,sBAEXF,IAAAC,cAAA,SAEGsB,KAAK,OAAOhB,GAAG,QAAQY,MAAO1B,EAAWe,MAAOgB,SAAWC,GAAMR,EAAY,QAASQ,EAAEC,OAAOP,OAASQ,WAAS,IAGpH3B,IAAAC,cAAA,YAEEM,GAAG,OACHqB,YAAY,0BACZT,MAAO1B,EAAWgB,KAClBe,SAAWC,GAAMR,EAAY,OAAQQ,EAAEC,OAAOP,UAOpDnB,IAAAC,cAAA,OAAKC,UAAU,yBAEXF,IAAAC,cAAA,MAAIC,UAAU,iBAAiBT,EAAWe,OAE1CR,IAAAC,cAAA,OAAKC,UAAU,oBAAoBT,EAAWgB,QA/B3CT,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,qBCsEhC2B,MAjFf,WAEE,MAAOvC,EAAOwC,GAAYC,mBAASC,KAAKC,MAAMC,aAAa5C,QAAU,KAE9DG,EAAYC,GAAiBqC,oBAAS,GAwD7C,OAtDAI,oBAAU,KAERD,aAAaE,QAAQ,QAASJ,KAAKK,UAAU/C,KAE5C,CAACA,IAmDFU,IAAAC,cAAA,OAAKC,UAAU,OAEbF,IAAAC,cAACb,EAAO,CACPE,MAAOA,EACPC,UArDaA,KAChB,MAAM+C,EAAU,CAEd/B,GAAIgC,MAEJ/B,MAAO,gBAEPC,KAAM,GAENV,aAAcY,KAAKW,OAGrBQ,EAAS,CAACQ,KAAYhD,KA0CnBE,aAlBegD,IAEpBV,EAASxC,EAAMmD,OAAQpC,GAASA,EAAKE,KAAOiC,KAiBvC/C,WAAYA,EACZC,cAAeA,IAIhBM,IAAAC,cAACc,EAAI,CAACtB,WAhBHH,EAAMoD,KAAMrC,GAASA,EAAKE,KAAOd,GAgBDuB,aA5ChB2B,IAErB,MAAMC,EAAoBtD,EAAMc,IAAKC,GAEhCA,EAAKE,KAAOd,EAENkD,EAIFtC,GAKTyB,EAASc,QCjDAC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjD,IAAAC,cAACD,IAAMkD,WAAU,KACflD,IAAAC,cAAC4B,EAAG","file":"static/js/main.44b0b934.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nfunction Sidebar({notes, onAddNote, onDeleteNote, activeNote, setActiveNote}) {\r\n\r\n    const sortedNotes = notes.sort((a,b) => b.lastModified - a.lastModified);\r\n\r\n    return(\r\n\r\n        <div className=\"app-sidebar\">\r\n\r\n            <div className=\"app-sidebar-header\">\r\n\r\n                <h1>Pocket Notes</h1>\r\n\r\n                <button onClick={onAddNote}>Add</button>\r\n            </div>\r\n\r\n            <div className=\"app-sidebar-notes\">\r\n\r\n            {sortedNotes.map((note) => (\r\n\r\n                <div className={ `app-sidebar-note ${note.id === activeNote && \"active\"} `} onClick={() => setActiveNote(note.id)}>\r\n\r\n                    <div className=\"sidebar-note-title\">\r\n\r\n                        <strong>{note.title}</strong>\r\n\r\n                        <button onClick={() => onDeleteNote(note.id)}>Delete</button>\r\n\r\n                    </div>\r\n\r\n                    <p>{note.body && note.body.substr(0, 100) + \"...\"}</p>\r\n\r\n                    <small className=\"note-meta\">\r\n                        Last modified {\" \"}\r\n\r\n                        {new Date(note.lastModified).toLocaleDateString(\"en-GB\", {\r\n\r\n                            hour: \"2-digit\",\r\n                            minute:\"2-digit\"\r\n                        })}\r\n                     </small>\r\n                </div>\r\n            ))}\r\n\r\n\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\n\r\n\r\nfunction Main( { activeNote, onUpdateNote }) {\r\n\r\n    const onEditField = (key, value) => {\r\n\r\n        onUpdateNote({\r\n\r\n            ...activeNote,\r\n\r\n           [key]: value,\r\n\r\n            lastModified: Date.now()\r\n\r\n        });\r\n\r\n\r\n    };\r\n\r\n\r\n    if (!activeNote)\r\n\r\n        return <div className=\"no-active-note\">No note selected</div>;\r\n\r\n\r\n\r\n    return (\r\n    \r\n    <div className=\"app-main\">\r\n\r\n        <div className=\"app-main-note-edit\">\r\n\r\n            <input\r\n            \r\n               type=\"text\" id=\"title\" value={activeNote.title} onChange={(e) => onEditField(\"title\", e.target.value)}  autoFocus \r\n            />\r\n\r\n            <textarea\r\n            \r\n              id=\"body\" \r\n              placeholder=\"Write your note here...\" \r\n              value={activeNote.body} \r\n              onChange={(e) => onEditField(\"body\", e.target.value)}\r\n            \r\n            />\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"app-main-note-preview\">\r\n\r\n            <h1 className=\"preview-title\">{activeNote.title}</h1>\r\n\r\n            <div className=\"markdown-preview\">{activeNote.body}</div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { useEffect } from \"react\";\n\nimport {useState} from \"react\";\n\nimport uuid from \"react-uuid\";\n\nimport './App.css';\n\nimport Sidebar from \"./Sidebar\";\n\nimport Main from \"./Main\";\n\nfunction App() {\n\n  const [notes, setNotes] = useState(JSON.parse(localStorage.notes) || []);\n\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n\n      id: uuid(),\n\n      title: \"Untitled Note\",\n\n      body: \"\",\n\n      lastModified: Date.now()\n    };\n\n    setNotes([newNote, ...notes]);\n  };\n\n\n  const onUpdateNote = ( updatedNote ) => {\n\n    const updatedNotesArray = notes.map((note) => {\n\n      if(note.id === activeNote) {\n\n        return updatedNote;\n\n      }\n\n      return note;\n\n\n    });\n\n    setNotes(updatedNotesArray);\n\n\n  };\n\nconst onDeleteNote = (idToDelete) => {\n\n  setNotes(notes.filter((note) => note.id !== idToDelete));\n\n};\n\nconst getActiveNote = () => {\n\n  return notes.find((note) => note.id === activeNote)\n};\n\n\n  return (\n    <div className=\"App\">\n      \n      <Sidebar \n       notes={notes} \n       onAddNote={onAddNote} \n       onDeleteNote={onDeleteNote}\n       activeNote={activeNote}\n       setActiveNote={setActiveNote}\n       \n      />\n\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote} />\n\n    </div>\n  );\n}\n\n\n  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}